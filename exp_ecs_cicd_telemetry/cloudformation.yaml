AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Hello World with Telemetry, ALB, and CI/CD

# --- S3 Bucket for telemetry ---
Resources:
  TelemetryBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-telemetry

  # --- ECS Cluster ---
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${AWS::StackName}-cluster

  # --- Task Execution Role ---
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/CloudWatchFullAccess

  # --- Task Definition ---
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AWS::StackName}-task
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: hello-app
          Image: <REPLACE_WITH_ECR_IMAGE_URI>
          PortMappings:
            - ContainerPort: 5000
          Environment:
            - Name: TELEMETRY_BUCKET
              Value: !Ref TelemetryBucket

  # --- ALB, Target Group, Listener ---
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB SG
      VpcId: <REPLACE_WITH_VPC_ID>
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${AWS::StackName}-alb
      Subnets: <REPLACE_WITH_SUBNETS>
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Scheme: internet-facing
      Type: application

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${AWS::StackName}-tg
      Port: 5000
      Protocol: HTTP
      VpcId: <REPLACE_WITH_VPC_ID>
      TargetType: ip
      HealthCheckPath: /

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup

  # --- ECS Service ---
  ECSService:
    Type: AWS::ECS::Service
    DependsOn: ALBListener
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref ECSTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref ALBSecurityGroup
          Subnets: <REPLACE_WITH_SUBNETS>
      LoadBalancers:
        - ContainerName: hello-app
          ContainerPort: 5000
          TargetGroupArn: !Ref ALBTargetGroup

# --- CodePipeline, CodeBuild, etc. (to be filled in) ---

Outputs:
  ALBEndpoint:
    Description: Application Load Balancer DNS Name
    Value: !GetAtt ApplicationLoadBalancer.DNSName
  TelemetryBucketName:
    Description: S3 bucket for telemetry
    Value: !Ref TelemetryBucket