AWSTemplateFormatVersion: '2010-09-09'
Description: CI/CD Pipeline for ECS Hello World with Telemetry

Parameters:
  AppStackName:
    Type: String
    Description: Name of the application CloudFormation stack (for ECS/ALB)
  ECRRepositoryUri:
    Type: String
    Description: ECR repository URI for the application image

Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-artifacts-${AWS::Region}-${AWS::AccountId}

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
        - arn:aws:iam::aws:policy/AmazonECS_FullAccess

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-build
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ECR_REPO_URI
            Value: !Ref ECRRepositoryUri
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 30

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AWS::StackName}-pipeline
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: <GITHUB_OWNER>
                Repo: <GITHUB_REPO>
                Branch: main
                OAuthToken: <GITHUB_OAUTH_TOKEN>
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                StackName: !Ref AppStackName
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: BuildOutput::cloudformation.yaml

Outputs:
  ArtifactBucketName:
    Description: S3 bucket for pipeline artifacts
    Value: !Ref ArtifactBucket
  CodeBuildProjectName:
    Description: CodeBuild project name
    Value: !Ref CodeBuildProject
  PipelineName:
    Description: CodePipeline name
    Value: !Ref Pipeline